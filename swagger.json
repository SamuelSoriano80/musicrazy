{
  "openapi": "3.0.0",
  "info": {
    "title": "Musicrazy API",
    "description": "A complete REST API for managing songs, artists, genres, and playlists with OAuth authentication and full CRUD operations",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@musicrazy.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "https://musicrazy.onrender.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/songs": {
      "get": {
        "summary": "Get all songs",
        "description": "Retrieve a paginated list of all songs with artist and genre information",
        "tags": ["Songs"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of songs per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "count": { "type": "integer", "description": "Number of songs returned" },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": { "type": "integer" },
                        "limit": { "type": "integer" },
                        "total": { "type": "integer" },
                        "pages": { "type": "integer" }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Song"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new song",
        "description": "Add a new song to the database (requires authentication)",
        "tags": ["Songs"],
        "security": [{ "cookieAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SongInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Song created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Song created successfully" },
                    "data": {
                      "$ref": "#/components/schemas/Song"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/songs/{id}": {
      "get": {
        "summary": "Get song by ID",
        "description": "Retrieve a specific song by its ID with full details",
        "tags": ["Songs"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Song ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "$ref": "#/components/schemas/Song"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format"
          },
          "404": {
            "description": "Song not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update song",
        "description": "Update an existing song's information (requires authentication)",
        "tags": ["Songs"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Song ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SongUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Song updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Song updated successfully" },
                    "data": {
                      "$ref": "#/components/schemas/Song"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Song not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete song",
        "description": "Remove a song from the database (requires authentication)",
        "tags": ["Songs"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Song ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Song deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Song deleted successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Song not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/artists": {
      "get": {
        "summary": "Get all artists",
        "description": "Retrieve a paginated list of all artists",
        "tags": ["Artists"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of artists per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "count": { "type": "integer" },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": { "type": "integer" },
                        "limit": { "type": "integer" },
                        "total": { "type": "integer" },
                        "pages": { "type": "integer" }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Artist"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new artist",
        "description": "Add a new artist to the database (requires authentication)",
        "tags": ["Artists"],
        "security": [{ "cookieAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Artist created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Artist created successfully" },
                    "data": {
                      "$ref": "#/components/schemas/Artist"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/artists/{id}": {
      "get": {
        "summary": "Get artist by ID",
        "description": "Retrieve a specific artist by their ID",
        "tags": ["Artists"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Artist ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "$ref": "#/components/schemas/Artist"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format"
          },
          "404": {
            "description": "Artist not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update artist",
        "description": "Update an existing artist's information (requires authentication)",
        "tags": ["Artists"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Artist ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Artist updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Artist updated successfully" },
                    "data": {
                      "$ref": "#/components/schemas/Artist"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Artist not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete artist",
        "description": "Remove an artist from the database (requires authentication)",
        "tags": ["Artists"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Artist ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Artist deleted successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Artist not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/genres": {
      "get": {
        "summary": "Get all genres",
        "description": "Retrieve a paginated list of all genres",
        "tags": ["Genres"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of genres per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "count": { "type": "integer" },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": { "type": "integer" },
                        "limit": { "type": "integer" },
                        "total": { "type": "integer" },
                        "pages": { "type": "integer" }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Genre"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new genre",
        "description": "Add a new genre to the database (requires authentication)",
        "tags": ["Genres"],
        "security": [{ "cookieAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Genre created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Genre created successfully" },
                    "data": {
                      "$ref": "#/components/schemas/Genre"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Authentication required"
          },
          "409": {
            "description": "Genre name already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/genres/{id}": {
      "get": {
        "summary": "Get genre by ID",
        "description": "Retrieve a specific genre by its ID",
        "tags": ["Genres"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Genre ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "$ref": "#/components/schemas/Genre"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format"
          },
          "404": {
            "description": "Genre not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update genre",
        "description": "Update an existing genre's information (requires authentication)",
        "tags": ["Genres"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Genre ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Genre updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Genre updated successfully" },
                    "data": {
                      "$ref": "#/components/schemas/Genre"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Genre not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete genre",
        "description": "Remove a genre from the database (requires authentication)",
        "tags": ["Genres"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Genre ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Genre deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Genre deleted successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Genre not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/playlists": {
      "get": {
        "summary": "Get all playlists",
        "description": "Retrieve a paginated list of all playlists with song information",
        "tags": ["Playlists"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of playlists per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "count": { "type": "integer" },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": { "type": "integer" },
                        "limit": { "type": "integer" },
                        "total": { "type": "integer" },
                        "pages": { "type": "integer" }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Playlist"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new playlist",
        "description": "Add a new playlist to the database (requires authentication)",
        "tags": ["Playlists"],
        "security": [{ "cookieAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaylistInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Playlist created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Playlist created successfully" },
                    "data": {
                      "$ref": "#/components/schemas/Playlist"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/playlists/{id}": {
      "get": {
        "summary": "Get playlist by ID",
        "description": "Retrieve a specific playlist by its ID with song details",
        "tags": ["Playlists"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Playlist ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "$ref": "#/components/schemas/Playlist"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format"
          },
          "404": {
            "description": "Playlist not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update playlist",
        "description": "Update an existing playlist's information (requires authentication)",
        "tags": ["Playlists"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Playlist ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaylistUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Playlist updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Playlist updated successfully" },
                    "data": {
                      "$ref": "#/components/schemas/Playlist"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Playlist not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete playlist",
        "description": "Remove a playlist from the database (requires authentication)",
        "tags": ["Playlists"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Playlist ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Playlist deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Playlist deleted successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Playlist not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/github": {
      "get": {
        "summary": "Login with GitHub",
        "description": "Initiate OAuth authentication with GitHub",
        "tags": ["Auth"],
        "responses": {
          "302": {
            "description": "Redirect to GitHub for authentication"
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "summary": "GitHub OAuth callback",
        "description": "Handle GitHub OAuth callback and set session",
        "tags": ["Auth"],
        "responses": {
          "302": {
            "description": "Redirect to client with authentication token"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout the current user",
        "description": "Clear the user session and log out",
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Logged out successfully" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/user": {
      "get": {
        "summary": "Get current user",
        "description": "Retrieve the currently authenticated user's information",
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "username": { "type": "string" },
                        "displayName": { "type": "string" },
                        "photos": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "value": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid",
        "description": "Session cookie for logged-in users"
      }
    },
    "schemas": {
      "Song": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Song ID"
          },
          "title": {
            "type": "string",
            "description": "Song title"
          },
          "artistId": {
            "type": "string",
            "description": "Artist ID"
          },
          "album": {
            "type": "string",
            "description": "Album name"
          },
          "genreId": {
            "type": "string",
            "description": "Genre ID"
          },
          "releaseYear": {
            "type": "integer",
            "description": "Release year"
          },
          "duration": {
            "type": "integer",
            "description": "Duration in seconds"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SongInput": {
        "type": "object",
        "required": ["title", "artistId", "genreId", "duration"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Bohemian Rhapsody"
          },
          "artistId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "album": {
            "type": "string",
            "example": "A Night at the Opera"
          },
          "genreId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439012"
          },
          "releaseYear": {
            "type": "integer",
            "example": 1975
          },
          "duration": {
            "type": "integer",
            "example": 354
          }
        }
      },
      "SongUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Updated Song Title"
          },
          "artistId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "album": {
            "type": "string",
            "example": "Updated Album"
          },
          "genreId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439012"
          },
          "releaseYear": {
            "type": "integer",
            "example": 1976
          },
          "duration": {
            "type": "integer",
            "example": 360
          }
        }
      },
      "Artist": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Artist ID"
          },
          "name": {
            "type": "string",
            "description": "Artist name"
          },
          "bio": {
            "type": "string",
            "description": "Artist biography"
          },
          "birthYear": {
            "type": "integer",
            "description": "Year of birth"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ArtistInput": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Queen"
          },
          "bio": {
            "type": "string",
            "example": "British rock band formed in London in 1970"
          },
          "birthYear": {
            "type": "integer",
            "example": 1970
          }
        }
      },
      "ArtistUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Queen Band"
          },
          "bio": {
            "type": "string",
            "example": "Updated biography"
          },
          "birthYear": {
            "type": "integer",
            "example": 1971
          }
        }
      },
      "Genre": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Genre ID"
          },
          "name": {
            "type": "string",
            "description": "Genre name"
          },
          "description": {
            "type": "string",
            "description": "Genre description"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GenreInput": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Rock"
          },
          "description": {
            "type": "string",
            "example": "A genre of popular music that originated as rock and roll"
          }
        }
      },
      "GenreUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Classic Rock"
          },
          "description": {
            "type": "string",
            "example": "Updated genre description"
          }
        }
      },
      "Playlist": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Playlist ID"
          },
          "name": {
            "type": "string",
            "description": "Playlist name"
          },
          "description": {
            "type": "string",
            "description": "Playlist description"
          },
          "songIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of song IDs"
          },
          "createdBy": {
            "type": "string",
            "description": "GitHub username of creator"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PlaylistInput": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "My Favorite Songs"
          },
          "description": {
            "type": "string",
            "example": "A collection of my all-time favorite tracks"
          },
          "songIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["507f1f77bcf86cd799439011", "507f1f77bcf86cd799439012"]
          }
        }
      },
      "PlaylistUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Playlist Name"
          },
          "description": {
            "type": "string",
            "example": "Updated playlist description"
          },
          "songIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["507f1f77bcf86cd799439011", "507f1f77bcf86cd799439013"]
          }
        }
      }
    }
  }
}